"""add_google_token_to_users

Revision ID: 5f0a5673eca2
Revises: c5656f450011
Create Date: 2025-04-19 16:26:57.468235

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f0a5673eca2'
down_revision: Union[str, None] = 'c5656f450011'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_skill_trees_title', table_name='skill_trees')
    op.drop_table('skill_trees')
    op.add_column('users', sa.Column('google_token', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'google_token')
    op.create_table('skill_trees',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('guide', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bg_color', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('classroom_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('classroom_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('classroom_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('percentage_completed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('next_deadline', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='skill_trees_pkey')
    )
    op.create_index('ix_skill_trees_title', 'skill_trees', ['title'], unique=False)
    # ### end Alembic commands ###
